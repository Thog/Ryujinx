trigger:
- master

pool:
  vmImage: 'windows-latest'

variables:
  buildConfiguration: 'Release'
  name: 1.1.$(rev:.r)

steps:
- task: UseDotNet@2
  displayName: 'Install .NET Core SDK'
  inputs:
    version: '3.1.x'
    performMultiLevelLookup: true
- task: DotNetCoreCLI@2
  displayName: 'Publish Windows x64'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'Ryujinx/Ryujinx.csproj'
    arguments: '-r win-x64 --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/win-x64'
    versioningScheme: 'byBuildNumber'
    zipAfterPublish: true
    modifyOutputPath: true

- task: DotNetCoreCLI@2
  displayName: 'Publish Linux x64'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'Ryujinx/Ryujinx.csproj'
    arguments: '-r linux-x64 --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/linux-x64'
    versioningScheme: 'byBuildNumber'
    zipAfterPublish: true
    modifyOutputPath: true

- task: DotNetCoreCLI@2
  displayName: 'Publish OSX x64'
  inputs:
    command: publish
    publishWebProjects: false
    projects: 'Ryujinx/Ryujinx.csproj'
    arguments: '-r osx-x64 --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)/osx-x64'
    versioningScheme: 'byBuildNumber'
    zipAfterPublish: true
    modifyOutputPath: true

- task: PublishBuildArtifacts@1
  displayName: "Upload Artifacts"
  inputs:
    pathtoPublish: '$(Build.ArtifactStagingDirectory)'
    artifactName: 'Ryujinx'